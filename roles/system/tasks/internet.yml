- name: Configure iptables to disallow internet access by default
  become: yes

  # vars need to come from host_vars file

  block:
    - name: Flush existing table
      # Clears all rules from the standard chains to ensure a clean slate.
      ansible.builtin.iptables:
        table: filter
        flush: true
        comment: "Flush all existing rules"

    - name: Allow all outbound loopback traffic
      ansible.builtin.iptables:
        table: filter
        chain: OUTPUT
        protocol: all
        out_interface: 'lo'
        jump: ACCEPT
        comment: 'Outbound loopback traffic always allowed'

    - name: All system uids allowed for any outbound traffic
      ansible.builtin.iptables:
        table: filter
        chain: OUTPUT
        protocol: all
        gid_owner: '0-999' # TODO: probably better to consult /etc/login.defs for UID_MIN and UID_MAX.
        jump: ACCEPT
        comment: 'Outbound traffic always allowed for system accounts'

    - name: Allow outbound traffic for users in internet_users var
      ansible.builtin.iptables:
        chain: OUTPUT
        table: filter
        protocol: 'all'
        uid_owner: "{{ item }}"
        jump: ACCEPT
        comment: "Allow outbound traffic for 'internet' user {{ item }}"
      loop: '{{ internet_users }}'

    - name: Set default policy for OUTPUT chain to DROP
      # The fail-safe: blocks all outbound traffic by default.
      # All packets will be dropped unless explicitly ACCEPTed by a preceding rule.
      ansible.builtin.iptables:
        chain: OUTPUT
        table: filter
        jump: DROP
        comment: 'Default DROP for all outbound traffic'

    - name: Save iptables rules to persist on reboot
      shell: iptables-save > /etc/iptables/rules.v4
      changed_when: false

    - name: Save the iptables rules persistently using netfilter-persistent
      # This saves the running configuration (which now includes the DROP policy and ACCEPT overrides)
      # and ensures they are loaded on reboot.
      ansible.builtin.service:
        name: netfilter-persistent
        state: started
        args: save
      changed_when: true
