- name: Install general packages with apt
  apt:
    name:
      # General utilities.
      - neovim
      - git
      - tree
      - htop
      - ffmpeg # Assists yt-dlp.
      - python3-venv # For offline docs for famistudio, so far.

      # Specialized utilities.
      - dosbox-x # Some abandonware targeted for support.
      - wine # Other abandonware.
    state: present
    update_cache: true

- name: Install PPA repositories and packages
  become: yes

  vars:
    ppa_repositories:
      # Graphics.
      - ppa:inkscape.dev/stable

      # For downloading tutorial/educational videos for offline use.
      - ppa:tomtomtom/yt-dlp

      # Mounting ripped CD images.
      - ppa:cdemu/ppa
    packages_to_install:
      - inkscape
      - yt-dlp
      - cdemu-client
      - cdemu-daemon

  block:
    - name: Get Ubuntu base codename from os-release
      set_fact:
        ubuntu_codename: "{{ lookup('ini', 'UBUNTU_CODENAME type=properties file=/etc/os-release') }}"

    - name: Add PPA repositories
      apt_repository:
        repo: "{{ item }}"
        state: present
        update_cache: yes
        codename: "{{ ubuntu_codename }}"
      loop: "{{ ppa_repositories }}"

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install PPA packages
      apt:
        name: "{{ packages_to_install }}"
        state: present
        update_cache: yes

    - name: Autoremove after PPA packages
      apt:
        autoremove: yes

- name: Install Flatpak applications
  become: yes

  vars:
    flathub_apps:
      # Graphics.
      - org.gimp.GIMP
      - com.github.PintaProject.Pinta

      # Music.
      - org.famistudio.FamiStudio

      # Basic educational.
      - org.kde.gcompris
      - org.kde.ktouch
      - org.kde.marble

      # Programming educational.
      - org.kde.kturtle

  block:
    - name: Install flatpak applications
      community.general.flatpak:
        name: "{{ flathub_apps }}"
        state: present
        method: system

- name: Download and install AppImages
  become: yes

  block:
    - name: Ensure /opt/appimages directory exists
      ansible.builtin.file:
        path: /opt/appimages
        state: directory
        mode: '0755'
        owner: root
        group: root
    - name: Install ratarmount (for mounting compressed images)
      get_url:
        url: 'https://github.com/mxmlnkn/ratarmount/releases/download/v1.2.0/ratarmount-1.2.0-x86_64.AppImage'
        dest: /opt/appimages/ratarmount.AppImage
        checksum: 'sha256:261217307888a7f73f8f329a74d32a545699966e85008a4a13065218698ff4b6'
        mode: '0755'
        timeout: 60
    - name: Symlink ratarmount
      file:
        src: /opt/appimages/ratarmount.AppImage
        dest: /usr/local/bin/ratarmount
        state: link

- name: Download Furnace Tracker
  include_tasks: furnace.yml

- name: Build aseprite
  include_tasks: aseprite.yml

- name: Install offline docs for Famistudio
  include_tasks: famistudio_docs.yml
