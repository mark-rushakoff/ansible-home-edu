- name: Build aseprite from source
  become: yes
  become_user: ansible-builder

  block:
    - name: Set aseprite variables
      set_fact:
        aseprite_version: "v1.3.15.3"
        aseprite_sha: f26ce6420802c5f8c4f88e843de5521a9fb1c860
        aseprite_install_dir: /home/ansible-builder/aseprite
        aseprite_state_file: /home/ansible-builder/aseprite/.aseprite_version

        skia_tag: "m124-08a5439a6b" # Tagged release for m124
        skia_sha: 08a5439a6be726021c1c1905d23ce298a3edc5e4
        skia_install_dir: /home/ansible-builder/skia-aseprite
        skia_state_file: /home/ansible-builder/skia-aseprite/.skia_version

        depot_tools_install_dir: /home/ansible-builder/depot_tools

    # Aseprite rebuild check:

    - name: Check if aseprite version state file exists
      stat:
        path: "{{ aseprite_state_file }}"
      register: aseprite_state

    - name: Read current aseprite version from state file
      slurp:
        path: "{{ aseprite_state_file }}"
      register: aseprite_current_version
      when: aseprite_state.stat.exists

    - name: Set initial rebuild flag (aseprite version check)
      set_fact:
        aseprite_version_changed: "{{ not aseprite_state.stat.exists or (aseprite_current_version.content | b64decode | trim) != aseprite_version }}"
        needs_rebuild: "{{ not aseprite_state.stat.exists or (aseprite_current_version.content | b64decode | trim) != aseprite_version }}"

    # Skia rebuild check:

    - name: Check if skia version state file exists
      stat:
        path: "{{ skia_state_file }}"
      register: skia_state

    - name: Read current skia version from state file
      slurp:
        path: "{{ skia_state_file }}"
      register: skia_current_version
      when: skia_state.stat.exists

    - name: Set skia rebuild flag
      set_fact:
        skia_needs_build: "{{ not skia_state.stat.exists or (skia_current_version.content | b64decode | trim) != skia_tag }}"

    - name: Update main rebuild flag if Skia needs built
      set_fact:
        needs_rebuild: true
      when: skia_needs_build

    - name: Clone or checkout aseprite
      git:
        repo: "https://github.com/aseprite/aseprite.git"
        dest: "{{ aseprite_install_dir }}"
        version: "{{ aseprite_version }}"
        update: yes
        clone: yes
      register: git_checkout
      when: needs_rebuild

    - name: Verify SHA matches expected (for supply chain security)
      assert:
        that:
          - git_checkout.after == aseprite_sha
        fail_msg: "expected SHA {{ aseprite_sha }}, got {{ git_checkout.after }}"
      when: needs_rebuild

    - name: Update aseprite submodules
      command: git submodule update --init --recursive
      args:
        chdir: "{{ aseprite_install_dir }}"
      when: needs_rebuild

    # Common dependencies:

    - name: Install aseprite and skia build dependencies
      become: yes
      become_user: root # Explicitly need root due to outer 'become'.
      apt:
        name:
          - g++
          - cmake
          - ninja-build
          # Needed for skia specifically:
          - libfontconfig1-dev
          - libgl1-mesa-dev
          # And for aseprite:
          - libxcursor-dev
          - libxi-dev
          - libxrandr-dev
        state: present
        update_cache: yes
      when: needs_rebuild or skia_needs_build

    - name: Clone or checkout (skia for aseprite)
      git:
        repo: "https://github.com/aseprite/skia.git"
        dest: "{{ skia_install_dir }}"
        version: "{{ skia_tag }}"
        update: yes
        clone: yes
      register: git_checkout
      when: skia_needs_build

    - name: Verify skia SHA matches expected (for supply chain security)
      assert:
        that:
          - git_checkout.after == skia_sha
        fail_msg: "expected SHA {{ skia_sha }}, got {{ git_checkout.after }}"
      when: skia_needs_build

    - name: Clone or checkout depot_tools
      git:
        repo: "https://chromium.googlesource.com/chromium/tools/depot_tools.git"
        dest: "{{ depot_tools_install_dir }}"
        version: "main"
        update: yes
        clone: yes
      when: skia_needs_build

    - name: Build skia
      command: |
        sh -c '
        "{{ depot_tools_install_dir }}"/gclient &&
        python3 tools/git-sync-deps &&
        python3 bin/fetch-ninja &&
        "{{ depot_tools_install_dir }}"/gn gen out/Release-x64 --args="is_debug=false is_official_build=true skia_use_system_expat=false skia_use_system_icu=false skia_use_system_libjpeg_turbo=false skia_use_system_libpng=false skia_use_system_libwebp=false skia_use_system_zlib=false skia_use_freetype=true skia_use_harfbuzz=true skia_pdf_subset_harfbuzz=true skia_use_system_freetype2=false skia_use_system_harfbuzz=false" &&
        ninja -C out/Release-x64 skia modules'
      args:
        chdir: "{{ skia_install_dir }}"
      when: skia_needs_build

    - name: Write skia version state file
      copy:
        content: "{{ skia_tag }}"
        dest: "{{ skia_state_file }}"
        mode: '0644'
      when: skia_needs_build

    - name: Configure aseprite
      command: |
        sh -c '
        cmake -B "{{ aseprite_install_dir }}/build" -S "{{ aseprite_install_dir }}" -G Ninja \
         -DCMAKE_BUILD_TYPE=RelWithDebInfo \
         -DLAF_BACKEND=skia \
         -DSKIA_DIR="{{ skia_install_dir }}" \
         -DSKIA_LIBRARY_DIR="{{ skia_install_dir }}/out/Release-x64"
        '
      args:
        chdir: "{{ aseprite_install_dir }}"
      when: needs_rebuild

    - name: Build aseprite
      command: cmake --build "{{ aseprite_install_dir }}/build" -- aseprite
      args:
        chdir: "{{ aseprite_install_dir }}"
      when: needs_rebuild

    - name: Copy entire aseprite build directory to /opt/aseprite
      become: yes
      become_user: root # Explicitly need root due to outer 'become'.
      ansible.posix.synchronize:
        src: "{{ aseprite_install_dir }}/build"
        dest: /opt/aseprite
        delete: yes  # This ensures full replacement of destination
      when: needs_rebuild

    - name: Symlink aseprite to /usr/local/bin/
      become: yes
      become_user: root # Explicitly need root due to outer 'become'.
      file:
        src: "/opt/aseprite/bin/aseprite"
        dest: /usr/local/bin/aseprite
        state: link

    - name: Write aseprite version state file
      copy:
        content: "{{ aseprite_version }}"
        dest: "{{ aseprite_state_file }}"
        mode: '0644'
      when: needs_rebuild

    - name: Install Aseprite .desktop file globally
      become: yes
      become_user: root # Explicitly need root due to outer 'become'.
      copy:
        dest: "/usr/share/applications/aseprite.desktop"
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=Aseprite
          Comment=Animated Sprite Editor & Pixel Art Tool
          Exec=/opt/aseprite/bin/aseprite
          Icon=/opt/aseprite/bin/data/icons/ase128.png
          Terminal=false
          Categories=Graphics;2DGraphics;PixelArt;
        mode: '0644'
        force: true
