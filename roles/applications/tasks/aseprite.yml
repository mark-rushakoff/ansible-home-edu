- name: Set aseprite variables
  set_fact:
    aseprite_version: "v1.3.15.3"
    aseprite_sha: f26ce6420802c5f8c4f88e843de5521a9fb1c860
    aseprite_install_dir: /opt/aseprite
    aseprite_state_file: /opt/aseprite/.aseprite_version

- name: Check if aseprite version state file exists
  stat:
    path: "{{ aseprite_state_file }}"
  register: aseprite_state

- name: Read current aseprite version from state file
  slurp:
    path: "{{ aseprite_state_file }}"
  register: aseprite_current_version
  when: aseprite_state.stat.exists

- name: Set rebuild flag
  set_fact:
    needs_rebuild: "{{ not aseprite_state.stat.exists or (aseprite_current_version.content | b64decode | trim) != aseprite_version }}"

- name: Clone or checkout
  git:
    repo: "https://github.com/aseprite/aseprite.git"
    dest: "{{ aseprite_install_dir }}"
    version: "{{ aseprite_version }}"
    update: yes
    clone: yes
  register: git_checkout
  when: needs_rebuild

- name: Verify SHA matches expected (for supply chain security)
  assert:
    that:
      - git_checkout.after == aseprite_sha
    fail_msg: "expected SHA {{ aseprite_sha }}, got {{ git_checkout.after }}"
  when: needs_rebuild

- name: Update submodules
  command: git submodule update --init --recursive
  args:
    chdir: "{{ aseprite_install_dir }}"
  when: needs_rebuild

- name: Install build dependencies
  apt:
    name:
      - g++
      - cmake
      - ninja-build
      # Definitely missing others here.
    state: present
    update_cache: yes
  when: needs_rebuild

- name: Build aseprite using build.sh
  command: ./build.sh
  args:
    chdir: "{{ aseprite_install_dir }}"
  when: needs_rebuild
