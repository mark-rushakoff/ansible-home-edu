- name: Set furnace variables
  set_fact:
    furnace_version: "0.6.8.3"
    furnace_install_dir: /opt/furnace
    furnace_download_dir: /tmp/furnace-download
    furnace_state_file: /opt/furnace/.ansible_version
    furnace_sha256: 298a4e30bbdfe5ad88ed7f3bd90bd657a3f0b2e6e7dfc2091663dda71424d555

- name: Check if furnace version state file exists
  stat:
    path:
      "{{ furnace_state_file }}"
  register: furnace_state

- name: Read current furnace version from state file
  slurp:
    path: "{{ furnace_state_file }}"
  register: furnace_current_version
  when: furnace_state.stat.exists

- name: Create furnace installation directory
  file:
    path: "{{ furnace_install_dir }}"
    state: directory
    mode: '0755'
  when: not furnace_state.stat.exists or furnace_installed_version != furnace_version

- name: Create temporary download directory for furnace
  file:
    path: "{{ furnace_download_dir }}"
    state: directory
    mode: '0755'
  when: not furnace_state.stat.exists or furnace_installed_version != furnace_version

- name: Download furnace
  get_url:
    url: "https://github.com/tildearrow/furnace/releases/download/v{{ furnace_version }}/furnace-{{ furnace_version }}-linux-x86_64.tar.gz"
    dest: "{{ furnace_download_dir }}/furnace.tar.gz"
    checksum: "sha256:{{ furnace_sha256 }}"
  when: not furnace_state.stat.exists or furnace_installed_version != furnace_version

- name: Extract furnace tarball
  unarchive:
    src: "{{ furnace_download_dir }}/furnace.tar.gz"
    dest: "{{ furnace_download_dir}}"
    remote_src: yes
  when: not furnace_state.stat.exists or furnace_installed_version != furnace_version

- name: Copy furnace contents to installation directory
  shell: |
    cp -r "{{ furnace_download_dir }}/furnace"/* {{ furnace_install_dir }}/
  when: not furnace_state.stat.exists or furnace_installed_version != furnace_version

- name: Symlink furnace to /usr/local/bin/
  file:
    src: "{{ furnace_install_dir }}/furnace"
    dest: /usr/local/bin/furnace
    state: link
  when: not furnace_state.stat.exists or furnace_installed_version != furnace_version

- name: Write furnace version to state file
  copy:
    content: "{{ furnace_version }}"
    dest: "{{ furnace_state_file }}"
  when: not furnace_state.stat.exists or furnace_installed_version != furnace_version
